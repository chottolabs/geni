name: Rust

on:
  pull_request:
  push:
    branches:
      - '*'
    tags:
      - '*'

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Install docker for macos
      if: startsWith(matrix.os, 'macos-')
      uses: douglascamata/setup-docker-macos-action@v1-alpha
    - name: Databases
      run: docker compose up -d
    - name: Run tests
      run: cargo test --verbose
  build-binary:
    name: build binaries
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        target: [aarch64-unknown-linux-gnu,i686-pc-windows-gnu, i686-pc-windows-msvc, i686-unknown-linux-gnu, x86_64-apple-darwin,x86_64-apple-darwin,x86_64-pc-windows-msvc,x86_64-unknown-linux-gnu ]
    steps:
      - name: Checkout
        uses: actions/checkout@v1  
      - name: Install toolchains
        run: rustup target add ${{matrix.target}}
      - name: Install deps
        run: sudo apt install libssl-dev
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Package
        shell: bash
        run: |
          cp target/release/geni geni-${{matrix.target}}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.target}}
          path: geni-${{matrix.target}}
  release-binary:
    name: release binaries
    needs: [build-binary]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
            files: 'geni*'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release-docker:
    name: build and release docker
    needs: [release-binary]
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/geni:latest
